openapi: 3.1.0
info:
  title: APIFiddle Sample Definition
  description: Example workspace
  version: 0.0.0
  x-fiddle-import-file: true
servers:
  - url: /api
paths:
  /cau-hoi:
    post:
      operationId: themCauHoi
      tags:
        - question
      summary: Them cau hoi
      responses:
        "201":
          description: The request was successful, and a new resource was created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Question"
        "401":
          description: Authentication is required to access the requested resource. The
            client must include the appropriate credentials.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
        "403":
          description: The server understood the request, but refuses to authorize it.
            Ensure the client has appropriate permissions.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
      parameters: []
      requestBody:
        required: true
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuestionCreate"
  /lich-su-lam-bai:
    get:
      operationId: lietKeLichSuLamBai
      tags:
        - attempt
      summary: Liet ke lich su lam bai
      responses:
        "200":
          description: The request was successful, and the server has returned the
            requested resource in the response body.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestAttemptSummary"
        "401":
          description: Authentication is required to access the requested resource. The
            client must include the appropriate credentials.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
                title: LietKeLichSuLamBaiUnauthorized
        "403":
          description: The server understood the request, but refuses to authorize it.
            Ensure the client has appropriate permissions.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
                title: LietKeLichSuLamBaiForbidden
      parameters: []
    post:
      operationId: taoLichSuLamBai
      tags:
        - attempt
      summary: Tao lich su lam bai
      responses:
        "201":
          description: The request was successful, and a new resource was created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestAttempt"
        "401":
          description: Authentication is required to access the requested resource. The
            client must include the appropriate credentials.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
        "403":
          description: The server understood the request, but refuses to authorize it.
            Ensure the client has appropriate permissions.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
  /cau-hoi/{questionId}:
    delete:
      operationId: xoaCauHoi
      tags:
        - question
      summary: Xoa cau hoi
      parameters:
        - $ref: "#/components/parameters/questionId"
      responses:
        "204":
          description: The request was successful, but there is no content to return in
            the response.
          content:
            application/json:
              schema:
                type: "null"
                title: XoaCauHoiNoContent
        "401":
          description: Authentication is required to access the requested resource. The
            client must include the appropriate credentials.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
                title: XoaCauHoiUnauthorized
        "403":
          description: The server understood the request, but refuses to authorize it.
            Ensure the client has appropriate permissions.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
                title: XoaCauHoiForbidden
    put:
      operationId: capNhatCauHoi
      tags:
        - question
      summary: Cap nhat cau hoi
      parameters:
        - $ref: "#/components/parameters/questionId"
      responses:
        "200":
          description: The request was successful, and the server has returned the
            requested resource in the response body.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Question"
        "401":
          description: Authentication is required to access the requested resource. The
            client must include the appropriate credentials.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
        "403":
          description: The server understood the request, but refuses to authorize it.
            Ensure the client has appropriate permissions.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
      requestBody:
        required: true
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuestionUpdate"
  /lich-su-lam-bai/{attemptId}:
    post:
      operationId: nopBai
      tags:
        - attempt
      summary: Nop bai
      parameters:
        - $ref: "#/components/parameters/attemptId"
      responses:
        "201":
          description: The request was successful, and a new resource was created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestAttemptSummary"
        "401":
          description: Authentication is required to access the requested resource. The
            client must include the appropriate credentials.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
        "403":
          description: The server understood the request, but refuses to authorize it.
            Ensure the client has appropriate permissions.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
      requestBody:
        required: true
        description: ""
        content:
          application/json:
            schema:
              type: object
  /users/login:
    post:
      operationId: dangNhap
      tags:
        - user
      summary: Dang nhap
      requestBody:
        required: true
        description: ""
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        "200":
          description: The request was successful, and the server has returned the
            requested resource in the response body.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                required:
                  - data
  /users:
    post:
      operationId: themNguoiDung
      tags:
        - user
      summary: Them nguoi dung
      responses:
        "201":
          description: The request was successful, and a new resource was created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Authentication is required to access the requested resource. The
            client must include the appropriate credentials.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
        "403":
          description: The server understood the request, but refuses to authorize it.
            Ensure the client has appropriate permissions.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
      requestBody:
        required: true
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreate"
  /users/logout:
    post:
      operationId: dangXuat
      tags:
        - user
      summary: Dang xuat
      responses:
        "401":
          description: Authentication is required to access the requested resource. The
            client must include the appropriate credentials.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
components:
  parameters:
    questionId:
      name: questionId
      in: path
      required: true
      schema:
        type: string
    attemptId:
      name: attemptId
      in: path
      required: true
      schema:
        type: string
  schemas:
    User:
      type: object
      properties:
        ho:
          type: string
        ten:
          type: string
        email:
          type: string
        matKhau:
          type: string
        tienDo:
          type: object
          properties:
            capDo:
              type: string
            level:
              type: integer
          required:
            - capDo
            - level
        quyen:
          type: string
          enum:
            - admin
            - user
      required:
        - ho
        - ten
        - email
        - matKhau
        - tienDo
        - quyen
      description: Người dùng
    UserCreate:
      type: object
      properties:
        ho:
          type: string
        ten:
          type: string
        email:
          type: string
        matKhau:
          type: string
        quyen:
          type: string
      required:
        - ho
        - ten
        - email
        - matKhau
        - quyen
      description: Data transfer object for creating a new User.
      x-fiddle-dto-info:
        baseSchemaName: User
    Question:
      type: object
      properties:
        chuDe:
          type: object
          properties:
            chuDe:
              type: string
            level:
              type: integer
          required:
            - chuDe
            - level
        cauHoi:
          type: string
        luaChon:
          type: array
          items:
            type: object
            properties:
              noiDung:
                type: string
              dapAn:
                type: boolean
              index:
                type: integer
            required:
              - noiDung
              - dapAn
              - index
        giaiThich:
          type: string
      required:
        - chuDe
        - cauHoi
        - luaChon
        - giaiThich
      description: Câu hỏi
    TestAttempt:
      type: object
      properties:
        thoiGianLamBai:
          type: integer
        ngayBatDauThi:
          type: string
        luaChon:
          type: array
          items:
            type: object
            properties:
              cauHoi:
                $ref: "#/components/schemas/Question"
              chon:
                type: integer
            required:
              - cauHoi
      required:
        - ngayBatDauThi
        - luaChon
      description: ""
    TestAttemptSummary:
      type: object
      properties:
        thoiGianLamBai:
          type: integer
        ngayBatDauThi:
          type: string
        soCauDung:
          type: integer
        soCau:
          type: integer
      required:
        - thoiGianLamBai
        - ngayBatDauThi
        - soCauDung
        - soCau
      description: A simplified representation of a TestAttempt, typically used in
        list views.
      x-fiddle-dto-info:
        baseSchemaName: TestAttempt
    Subject:
      type: object
      properties:
        name:
          type: string
        level:
          type: array
          items:
            type: array
            items:
              $ref: "#/components/schemas/Question"
      required:
        - name
        - level
      description: ""
    QuestionCreate:
      type: object
      properties:
        chuDe:
          type: object
          properties:
            chuDe:
              type: string
            level:
              type: integer
          required:
            - chuDe
            - level
        cauHoi:
          type: string
        luaChon:
          type: array
          items:
            type: object
            properties:
              noiDung:
                type: string
              dapAn:
                type: boolean
              index:
                type: integer
            required:
              - noiDung
              - dapAn
              - index
        giaiThich:
          type: string
      required:
        - chuDe
        - cauHoi
        - luaChon
        - giaiThich
      description: Data transfer object for creating a new Question.
      x-fiddle-dto-info:
        baseSchemaName: Question
    QuestionUpdate:
      type: object
      properties:
        chuDe:
          type: object
          properties:
            chuDe:
              type: string
            level:
              type: integer
          required:
            - chuDe
            - level
        cauHoi:
          type: string
        luaChon:
          type: array
          items:
            type: object
            properties:
              noiDung:
                type: string
              dapAn:
                type: boolean
              index:
                type: integer
            required:
              - noiDung
              - dapAn
              - index
        giaiThich:
          type: string
      required:
        - chuDe
        - cauHoi
        - luaChon
        - giaiThich
      description: Data transfer object for updating all fields of an existing
        Question (PUT operation).
      x-fiddle-dto-info:
        baseSchemaName: Question
tags:
  - name: attempt
  - name: question
  - name: user
