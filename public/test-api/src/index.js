/**
 * APIFiddle Sample Definition
 * Example workspace
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import DangNhap200Response from './model/DangNhap200Response';
import DangNhapRequest from './model/DangNhapRequest';
import LietKeLichSuLamBaiForbidden from './model/LietKeLichSuLamBaiForbidden';
import LietKeLichSuLamBaiUnauthorized from './model/LietKeLichSuLamBaiUnauthorized';
import Question from './model/Question';
import QuestionChuDe from './model/QuestionChuDe';
import QuestionCreate from './model/QuestionCreate';
import QuestionLuaChonInner from './model/QuestionLuaChonInner';
import QuestionUpdate from './model/QuestionUpdate';
import Subject from './model/Subject';
import TestAttempt from './model/TestAttempt';
import TestAttemptLuaChonInner from './model/TestAttemptLuaChonInner';
import TestAttemptSummary from './model/TestAttemptSummary';
import ThemCauHoi401Response from './model/ThemCauHoi401Response';
import User from './model/User';
import UserCreate from './model/UserCreate';
import UserTienDo from './model/UserTienDo';
import XoaCauHoiForbidden from './model/XoaCauHoiForbidden';
import XoaCauHoiUnauthorized from './model/XoaCauHoiUnauthorized';
import AttemptApi from './api/AttemptApi';
import QuestionApi from './api/QuestionApi';
import UserApi from './api/UserApi';


/**
* Example workspace.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ApiFiddleSampleDefinition = require('index'); // See note below*.
* var xxxSvc = new ApiFiddleSampleDefinition.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ApiFiddleSampleDefinition.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ApiFiddleSampleDefinition.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ApiFiddleSampleDefinition.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 0.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The DangNhap200Response model constructor.
     * @property {module:model/DangNhap200Response}
     */
    DangNhap200Response,

    /**
     * The DangNhapRequest model constructor.
     * @property {module:model/DangNhapRequest}
     */
    DangNhapRequest,

    /**
     * The LietKeLichSuLamBaiForbidden model constructor.
     * @property {module:model/LietKeLichSuLamBaiForbidden}
     */
    LietKeLichSuLamBaiForbidden,

    /**
     * The LietKeLichSuLamBaiUnauthorized model constructor.
     * @property {module:model/LietKeLichSuLamBaiUnauthorized}
     */
    LietKeLichSuLamBaiUnauthorized,

    /**
     * The Question model constructor.
     * @property {module:model/Question}
     */
    Question,

    /**
     * The QuestionChuDe model constructor.
     * @property {module:model/QuestionChuDe}
     */
    QuestionChuDe,

    /**
     * The QuestionCreate model constructor.
     * @property {module:model/QuestionCreate}
     */
    QuestionCreate,

    /**
     * The QuestionLuaChonInner model constructor.
     * @property {module:model/QuestionLuaChonInner}
     */
    QuestionLuaChonInner,

    /**
     * The QuestionUpdate model constructor.
     * @property {module:model/QuestionUpdate}
     */
    QuestionUpdate,

    /**
     * The Subject model constructor.
     * @property {module:model/Subject}
     */
    Subject,

    /**
     * The TestAttempt model constructor.
     * @property {module:model/TestAttempt}
     */
    TestAttempt,

    /**
     * The TestAttemptLuaChonInner model constructor.
     * @property {module:model/TestAttemptLuaChonInner}
     */
    TestAttemptLuaChonInner,

    /**
     * The TestAttemptSummary model constructor.
     * @property {module:model/TestAttemptSummary}
     */
    TestAttemptSummary,

    /**
     * The ThemCauHoi401Response model constructor.
     * @property {module:model/ThemCauHoi401Response}
     */
    ThemCauHoi401Response,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The UserCreate model constructor.
     * @property {module:model/UserCreate}
     */
    UserCreate,

    /**
     * The UserTienDo model constructor.
     * @property {module:model/UserTienDo}
     */
    UserTienDo,

    /**
     * The XoaCauHoiForbidden model constructor.
     * @property {module:model/XoaCauHoiForbidden}
     */
    XoaCauHoiForbidden,

    /**
     * The XoaCauHoiUnauthorized model constructor.
     * @property {module:model/XoaCauHoiUnauthorized}
     */
    XoaCauHoiUnauthorized,

    /**
    * The AttemptApi service constructor.
    * @property {module:api/AttemptApi}
    */
    AttemptApi,

    /**
    * The QuestionApi service constructor.
    * @property {module:api/QuestionApi}
    */
    QuestionApi,

    /**
    * The UserApi service constructor.
    * @property {module:api/UserApi}
    */
    UserApi
};
