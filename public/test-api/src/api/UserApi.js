/**
 * APIFiddle Sample Definition
 * Example workspace
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DangNhap200Response from '../model/DangNhap200Response';
import DangNhapRequest from '../model/DangNhapRequest';
import ThemCauHoi401Response from '../model/ThemCauHoi401Response';
import User from '../model/User';
import UserCreate from '../model/UserCreate';

/**
* User service.
* @module api/UserApi
* @version 0.0.0
*/
export default class UserApi {

    /**
    * Constructs a new UserApi. 
    * @alias module:api/UserApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the dangNhap operation.
     * @callback module:api/UserApi~dangNhapCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DangNhap200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Dang nhap
     * @param {module:model/DangNhapRequest} dangNhapRequest 
     * @param {module:api/UserApi~dangNhapCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DangNhap200Response}
     */
    dangNhap(dangNhapRequest, callback) {
      let postBody = dangNhapRequest;
      // verify the required parameter 'dangNhapRequest' is set
      if (dangNhapRequest === undefined || dangNhapRequest === null) {
        throw new Error("Missing the required parameter 'dangNhapRequest' when calling dangNhap");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DangNhap200Response;
      return this.apiClient.callApi(
        '/users/login', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dangXuat operation.
     * @callback module:api/UserApi~dangXuatCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Dang xuat
     * @param {module:api/UserApi~dangXuatCallback} callback The callback function, accepting three arguments: error, data, response
     */
    dangXuat(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/users/logout', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the themNguoiDung operation.
     * @callback module:api/UserApi~themNguoiDungCallback
     * @param {String} error Error message, if any.
     * @param {module:model/User} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Them nguoi dung
     * @param {module:model/UserCreate} userCreate 
     * @param {module:api/UserApi~themNguoiDungCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/User}
     */
    themNguoiDung(userCreate, callback) {
      let postBody = userCreate;
      // verify the required parameter 'userCreate' is set
      if (userCreate === undefined || userCreate === null) {
        throw new Error("Missing the required parameter 'userCreate' when calling themNguoiDung");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = User;
      return this.apiClient.callApi(
        '/users', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
