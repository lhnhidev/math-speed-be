/**
 * APIFiddle Sample Definition
 * Example workspace
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import LietKeLichSuLamBaiForbidden from '../model/LietKeLichSuLamBaiForbidden';
import LietKeLichSuLamBaiUnauthorized from '../model/LietKeLichSuLamBaiUnauthorized';
import TestAttempt from '../model/TestAttempt';
import TestAttemptSummary from '../model/TestAttemptSummary';
import ThemCauHoi401Response from '../model/ThemCauHoi401Response';

/**
* Attempt service.
* @module api/AttemptApi
* @version 0.0.0
*/
export default class AttemptApi {

    /**
    * Constructs a new AttemptApi. 
    * @alias module:api/AttemptApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the lietKeLichSuLamBai operation.
     * @callback module:api/AttemptApi~lietKeLichSuLamBaiCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TestAttemptSummary} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Liet ke lich su lam bai
     * @param {module:api/AttemptApi~lietKeLichSuLamBaiCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TestAttemptSummary}
     */
    lietKeLichSuLamBai(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TestAttemptSummary;
      return this.apiClient.callApi(
        '/lich-su-lam-bai', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the nopBai operation.
     * @callback module:api/AttemptApi~nopBaiCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TestAttemptSummary} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Nop bai
     * @param {String} attemptId 
     * @param {Object.<String, Object>} body 
     * @param {module:api/AttemptApi~nopBaiCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TestAttemptSummary}
     */
    nopBai(attemptId, body, callback) {
      let postBody = body;
      // verify the required parameter 'attemptId' is set
      if (attemptId === undefined || attemptId === null) {
        throw new Error("Missing the required parameter 'attemptId' when calling nopBai");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling nopBai");
      }

      let pathParams = {
        'attemptId': attemptId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = TestAttemptSummary;
      return this.apiClient.callApi(
        '/lich-su-lam-bai/{attemptId}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the taoLichSuLamBai operation.
     * @callback module:api/AttemptApi~taoLichSuLamBaiCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TestAttempt} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Tao lich su lam bai
     * @param {module:api/AttemptApi~taoLichSuLamBaiCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TestAttempt}
     */
    taoLichSuLamBai(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TestAttempt;
      return this.apiClient.callApi(
        '/lich-su-lam-bai', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
