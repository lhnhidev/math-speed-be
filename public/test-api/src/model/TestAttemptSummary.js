/**
 * APIFiddle Sample Definition
 * Example workspace
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TestAttemptSummary model module.
 * @module model/TestAttemptSummary
 * @version 0.0.0
 */
class TestAttemptSummary {
    /**
     * Constructs a new <code>TestAttemptSummary</code>.
     * A simplified representation of a TestAttempt, typically used in list views.
     * @alias module:model/TestAttemptSummary
     * @param thoiGianLamBai {Number} 
     * @param ngayBatDauThi {String} 
     * @param soCauDung {Number} 
     * @param soCau {Number} 
     */
    constructor(thoiGianLamBai, ngayBatDauThi, soCauDung, soCau) { 
        
        TestAttemptSummary.initialize(this, thoiGianLamBai, ngayBatDauThi, soCauDung, soCau);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, thoiGianLamBai, ngayBatDauThi, soCauDung, soCau) { 
        obj['thoiGianLamBai'] = thoiGianLamBai;
        obj['ngayBatDauThi'] = ngayBatDauThi;
        obj['soCauDung'] = soCauDung;
        obj['soCau'] = soCau;
    }

    /**
     * Constructs a <code>TestAttemptSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TestAttemptSummary} obj Optional instance to populate.
     * @return {module:model/TestAttemptSummary} The populated <code>TestAttemptSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TestAttemptSummary();

            if (data.hasOwnProperty('thoiGianLamBai')) {
                obj['thoiGianLamBai'] = ApiClient.convertToType(data['thoiGianLamBai'], 'Number');
            }
            if (data.hasOwnProperty('ngayBatDauThi')) {
                obj['ngayBatDauThi'] = ApiClient.convertToType(data['ngayBatDauThi'], 'String');
            }
            if (data.hasOwnProperty('soCauDung')) {
                obj['soCauDung'] = ApiClient.convertToType(data['soCauDung'], 'Number');
            }
            if (data.hasOwnProperty('soCau')) {
                obj['soCau'] = ApiClient.convertToType(data['soCau'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TestAttemptSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TestAttemptSummary</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TestAttemptSummary.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['ngayBatDauThi'] && !(typeof data['ngayBatDauThi'] === 'string' || data['ngayBatDauThi'] instanceof String)) {
            throw new Error("Expected the field `ngayBatDauThi` to be a primitive type in the JSON string but got " + data['ngayBatDauThi']);
        }

        return true;
    }


}

TestAttemptSummary.RequiredProperties = ["thoiGianLamBai", "ngayBatDauThi", "soCauDung", "soCau"];

/**
 * @member {Number} thoiGianLamBai
 */
TestAttemptSummary.prototype['thoiGianLamBai'] = undefined;

/**
 * @member {String} ngayBatDauThi
 */
TestAttemptSummary.prototype['ngayBatDauThi'] = undefined;

/**
 * @member {Number} soCauDung
 */
TestAttemptSummary.prototype['soCauDung'] = undefined;

/**
 * @member {Number} soCau
 */
TestAttemptSummary.prototype['soCau'] = undefined;






export default TestAttemptSummary;

