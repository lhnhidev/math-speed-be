/**
 * APIFiddle Sample Definition
 * Example workspace
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Question from './Question';

/**
 * The TestAttemptLuaChonInner model module.
 * @module model/TestAttemptLuaChonInner
 * @version 0.0.0
 */
class TestAttemptLuaChonInner {
    /**
     * Constructs a new <code>TestAttemptLuaChonInner</code>.
     * @alias module:model/TestAttemptLuaChonInner
     * @param cauHoi {module:model/Question} 
     */
    constructor(cauHoi) { 
        
        TestAttemptLuaChonInner.initialize(this, cauHoi);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, cauHoi) { 
        obj['cauHoi'] = cauHoi;
    }

    /**
     * Constructs a <code>TestAttemptLuaChonInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TestAttemptLuaChonInner} obj Optional instance to populate.
     * @return {module:model/TestAttemptLuaChonInner} The populated <code>TestAttemptLuaChonInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TestAttemptLuaChonInner();

            if (data.hasOwnProperty('cauHoi')) {
                obj['cauHoi'] = Question.constructFromObject(data['cauHoi']);
            }
            if (data.hasOwnProperty('chon')) {
                obj['chon'] = ApiClient.convertToType(data['chon'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TestAttemptLuaChonInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TestAttemptLuaChonInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TestAttemptLuaChonInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `cauHoi`
        if (data['cauHoi']) { // data not null
          Question.validateJSON(data['cauHoi']);
        }

        return true;
    }


}

TestAttemptLuaChonInner.RequiredProperties = ["cauHoi"];

/**
 * @member {module:model/Question} cauHoi
 */
TestAttemptLuaChonInner.prototype['cauHoi'] = undefined;

/**
 * @member {Number} chon
 */
TestAttemptLuaChonInner.prototype['chon'] = undefined;






export default TestAttemptLuaChonInner;

