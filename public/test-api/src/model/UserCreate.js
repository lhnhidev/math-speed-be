/**
 * APIFiddle Sample Definition
 * Example workspace
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UserCreate model module.
 * @module model/UserCreate
 * @version 0.0.0
 */
class UserCreate {
    /**
     * Constructs a new <code>UserCreate</code>.
     * Data transfer object for creating a new User.
     * @alias module:model/UserCreate
     * @param ho {String} 
     * @param ten {String} 
     * @param email {String} 
     * @param matKhau {String} 
     * @param quyen {String} 
     */
    constructor(ho, ten, email, matKhau, quyen) { 
        
        UserCreate.initialize(this, ho, ten, email, matKhau, quyen);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, ho, ten, email, matKhau, quyen) { 
        obj['ho'] = ho;
        obj['ten'] = ten;
        obj['email'] = email;
        obj['matKhau'] = matKhau;
        obj['quyen'] = quyen;
    }

    /**
     * Constructs a <code>UserCreate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserCreate} obj Optional instance to populate.
     * @return {module:model/UserCreate} The populated <code>UserCreate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserCreate();

            if (data.hasOwnProperty('ho')) {
                obj['ho'] = ApiClient.convertToType(data['ho'], 'String');
            }
            if (data.hasOwnProperty('ten')) {
                obj['ten'] = ApiClient.convertToType(data['ten'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('matKhau')) {
                obj['matKhau'] = ApiClient.convertToType(data['matKhau'], 'String');
            }
            if (data.hasOwnProperty('quyen')) {
                obj['quyen'] = ApiClient.convertToType(data['quyen'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserCreate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserCreate</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UserCreate.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['ho'] && !(typeof data['ho'] === 'string' || data['ho'] instanceof String)) {
            throw new Error("Expected the field `ho` to be a primitive type in the JSON string but got " + data['ho']);
        }
        // ensure the json data is a string
        if (data['ten'] && !(typeof data['ten'] === 'string' || data['ten'] instanceof String)) {
            throw new Error("Expected the field `ten` to be a primitive type in the JSON string but got " + data['ten']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['matKhau'] && !(typeof data['matKhau'] === 'string' || data['matKhau'] instanceof String)) {
            throw new Error("Expected the field `matKhau` to be a primitive type in the JSON string but got " + data['matKhau']);
        }
        // ensure the json data is a string
        if (data['quyen'] && !(typeof data['quyen'] === 'string' || data['quyen'] instanceof String)) {
            throw new Error("Expected the field `quyen` to be a primitive type in the JSON string but got " + data['quyen']);
        }

        return true;
    }


}

UserCreate.RequiredProperties = ["ho", "ten", "email", "matKhau", "quyen"];

/**
 * @member {String} ho
 */
UserCreate.prototype['ho'] = undefined;

/**
 * @member {String} ten
 */
UserCreate.prototype['ten'] = undefined;

/**
 * @member {String} email
 */
UserCreate.prototype['email'] = undefined;

/**
 * @member {String} matKhau
 */
UserCreate.prototype['matKhau'] = undefined;

/**
 * @member {String} quyen
 */
UserCreate.prototype['quyen'] = undefined;






export default UserCreate;

