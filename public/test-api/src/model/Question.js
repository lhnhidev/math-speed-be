/**
 * APIFiddle Sample Definition
 * Example workspace
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import QuestionChuDe from './QuestionChuDe';
import QuestionLuaChonInner from './QuestionLuaChonInner';

/**
 * The Question model module.
 * @module model/Question
 * @version 0.0.0
 */
class Question {
    /**
     * Constructs a new <code>Question</code>.
     * Câu hỏi
     * @alias module:model/Question
     * @param chuDe {module:model/QuestionChuDe} 
     * @param cauHoi {String} 
     * @param luaChon {Array.<module:model/QuestionLuaChonInner>} 
     * @param giaiThich {String} 
     */
    constructor(chuDe, cauHoi, luaChon, giaiThich) { 
        
        Question.initialize(this, chuDe, cauHoi, luaChon, giaiThich);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, chuDe, cauHoi, luaChon, giaiThich) { 
        obj['chuDe'] = chuDe;
        obj['cauHoi'] = cauHoi;
        obj['luaChon'] = luaChon;
        obj['giaiThich'] = giaiThich;
    }

    /**
     * Constructs a <code>Question</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Question} obj Optional instance to populate.
     * @return {module:model/Question} The populated <code>Question</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Question();

            if (data.hasOwnProperty('chuDe')) {
                obj['chuDe'] = QuestionChuDe.constructFromObject(data['chuDe']);
            }
            if (data.hasOwnProperty('cauHoi')) {
                obj['cauHoi'] = ApiClient.convertToType(data['cauHoi'], 'String');
            }
            if (data.hasOwnProperty('luaChon')) {
                obj['luaChon'] = ApiClient.convertToType(data['luaChon'], [QuestionLuaChonInner]);
            }
            if (data.hasOwnProperty('giaiThich')) {
                obj['giaiThich'] = ApiClient.convertToType(data['giaiThich'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Question</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Question</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Question.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `chuDe`
        if (data['chuDe']) { // data not null
          QuestionChuDe.validateJSON(data['chuDe']);
        }
        // ensure the json data is a string
        if (data['cauHoi'] && !(typeof data['cauHoi'] === 'string' || data['cauHoi'] instanceof String)) {
            throw new Error("Expected the field `cauHoi` to be a primitive type in the JSON string but got " + data['cauHoi']);
        }
        if (data['luaChon']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['luaChon'])) {
                throw new Error("Expected the field `luaChon` to be an array in the JSON data but got " + data['luaChon']);
            }
            // validate the optional field `luaChon` (array)
            for (const item of data['luaChon']) {
                QuestionLuaChonInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['giaiThich'] && !(typeof data['giaiThich'] === 'string' || data['giaiThich'] instanceof String)) {
            throw new Error("Expected the field `giaiThich` to be a primitive type in the JSON string but got " + data['giaiThich']);
        }

        return true;
    }


}

Question.RequiredProperties = ["chuDe", "cauHoi", "luaChon", "giaiThich"];

/**
 * @member {module:model/QuestionChuDe} chuDe
 */
Question.prototype['chuDe'] = undefined;

/**
 * @member {String} cauHoi
 */
Question.prototype['cauHoi'] = undefined;

/**
 * @member {Array.<module:model/QuestionLuaChonInner>} luaChon
 */
Question.prototype['luaChon'] = undefined;

/**
 * @member {String} giaiThich
 */
Question.prototype['giaiThich'] = undefined;






export default Question;

