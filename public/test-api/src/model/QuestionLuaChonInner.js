/**
 * APIFiddle Sample Definition
 * Example workspace
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The QuestionLuaChonInner model module.
 * @module model/QuestionLuaChonInner
 * @version 0.0.0
 */
class QuestionLuaChonInner {
    /**
     * Constructs a new <code>QuestionLuaChonInner</code>.
     * @alias module:model/QuestionLuaChonInner
     * @param noiDung {String} 
     * @param dapAn {Boolean} 
     * @param index {Number} 
     */
    constructor(noiDung, dapAn, index) { 
        
        QuestionLuaChonInner.initialize(this, noiDung, dapAn, index);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, noiDung, dapAn, index) { 
        obj['noiDung'] = noiDung;
        obj['dapAn'] = dapAn;
        obj['index'] = index;
    }

    /**
     * Constructs a <code>QuestionLuaChonInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QuestionLuaChonInner} obj Optional instance to populate.
     * @return {module:model/QuestionLuaChonInner} The populated <code>QuestionLuaChonInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QuestionLuaChonInner();

            if (data.hasOwnProperty('noiDung')) {
                obj['noiDung'] = ApiClient.convertToType(data['noiDung'], 'String');
            }
            if (data.hasOwnProperty('dapAn')) {
                obj['dapAn'] = ApiClient.convertToType(data['dapAn'], 'Boolean');
            }
            if (data.hasOwnProperty('index')) {
                obj['index'] = ApiClient.convertToType(data['index'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QuestionLuaChonInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QuestionLuaChonInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of QuestionLuaChonInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['noiDung'] && !(typeof data['noiDung'] === 'string' || data['noiDung'] instanceof String)) {
            throw new Error("Expected the field `noiDung` to be a primitive type in the JSON string but got " + data['noiDung']);
        }

        return true;
    }


}

QuestionLuaChonInner.RequiredProperties = ["noiDung", "dapAn", "index"];

/**
 * @member {String} noiDung
 */
QuestionLuaChonInner.prototype['noiDung'] = undefined;

/**
 * @member {Boolean} dapAn
 */
QuestionLuaChonInner.prototype['dapAn'] = undefined;

/**
 * @member {Number} index
 */
QuestionLuaChonInner.prototype['index'] = undefined;






export default QuestionLuaChonInner;

